/**
 * Exclusive-or gate: out = a XOR b.
 */
CHIP Xor {
    IN a, b;
    OUT out;

    PARTS:
    // Implementation based on: Or(And(a,Not(b)), And(b,Not(a)))
    Not(in=a, out=nota);      // Intermediate wire for Not(a)
    Not(in=b, out=notb);      // Intermediate wire for Not(b)
    And(a=a, b=notb, out=w1); // Output of a AND Not(b) -> let's call it w1 for simplicity in code
    And(a=nota, b=b, out=w2); // Output of Not(a) AND b -> let's call it w2
    Or(a=w1, b=w2, out=out);  // Output of w1 OR w2 is the final XOR output
}
